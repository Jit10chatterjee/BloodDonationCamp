// <auto-generated />
using BloodBankMicroservice.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BloodBankMicroservice.Migrations
{
    [DbContext(typeof(BloodBankdbContext))]
    [Migration("20240611072617_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BloodBankMicroservice.Models.BloodBankInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodBankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BloodBankInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "2/1 - RC Road",
                            BloodBankName = "Sangam",
                            City = "Kolkata",
                            ContactNumber = "033-2580-2587",
                            State = "West Bengal"
                        },
                        new
                        {
                            Id = 2,
                            Address = "33- NBC Street",
                            BloodBankName = "Seva",
                            City = "kalyan",
                            ContactNumber = "9187485960",
                            State = "Maharashtra"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
